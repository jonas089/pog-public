#!/sbin/runscript

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/proofofgaming/.proofofgaming" ]; then
	PIGEOND_DEFAULT_DATADIR="/var/lib/proofofgaming/.proofofgaming"
else
	PIGEOND_DEFAULT_DATADIR="/var/lib/proofofgamingd"
fi

PIGEOND_CONFIGFILE=${PIGEOND_CONFIGFILE:-/etc/proofofgaming/proofofgaming.conf}
PIGEOND_PIDDIR=${PIGEOND_PIDDIR:-/var/run/proofofgamingd}
PIGEOND_PIDFILE=${PIGEOND_PIDFILE:-${PIGEOND_PIDDIR}/proofofgamingd.pid}
PIGEOND_DATADIR=${PIGEOND_DATADIR:-${PIGEOND_DEFAULT_DATADIR}}
PIGEOND_USER=${PIGEOND_USER:-${PIGEON_USER:-proofofgaming}}
PIGEOND_GROUP=${PIGEOND_GROUP:-proofofgaming}
PIGEOND_BIN=${PIGEOND_BIN:-/usr/bin/proofofgamingd}
PIGEOND_NICE=${PIGEOND_NICE:-${NICELEVEL:-0}}
PIGEOND_OPTS="${PIGEOND_OPTS:-${PIGEON_OPTS}}"

name="ProofOfGaming Core Daemon"
description="ProofOfGaming cryptocurrency P2P network daemon"

command="/usr/bin/proofofgamingd"
command_args="-pid=\"${PIGEOND_PIDFILE}\" \
		-conf=\"${PIGEOND_CONFIGFILE}\" \
		-datadir=\"${PIGEOND_DATADIR}\" \
		-daemon \
		${PIGEOND_OPTS}"

required_files="${PIGEOND_CONFIGFILE}"
start_stop_daemon_args="-u ${PIGEOND_USER} \
			-N ${PIGEOND_NICE} -w 2000"
pidfile="${PIGEOND_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${PIGEOND_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${PIGEOND_USER}:${PIGEOND_GROUP}" \
	"${PIGEOND_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${PIGEOND_USER}:${PIGEOND_GROUP}" \
	"${PIGEOND_PIDDIR}"

	checkpath -f \
	-o ${PIGEOND_USER}:${PIGEOND_GROUP} \
	-m 0660 \
	${PIGEOND_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${PIGEOND_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run proofofgamingd."
		eerror "The setting must appear in ${PIGEOND_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"ProofOfGaming Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
